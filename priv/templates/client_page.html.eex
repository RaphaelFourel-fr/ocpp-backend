<!DOCTYPE html> 
<html>
    <head>
        <title>Elixir OCPP Test client</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width">
        <style>
          body,input,select, button {
            font-size: 20px;
          }
        </style>
    </head>
    <body>
       
        <div>
            serial: <input type="text" id="serial" value="Rotterdam"/>
        </div>
        <div>
            host: <select id="hostSelect">
              <option value='local_ex'>local elixir</option> 
              <option value='local_cn'>local CN</option> 
            </select>
        </div>
        <div> 
          message:<select id="messageSelect" onchange="selectMessage();">
            <option value=''></option>
            <option value='[2, "42", "BootNotification", {"chargeBoxSerialNumber": "01234567", "chargePointModel":"Lolo4", "chargePointVendor":"NewMotion"}]'>BootNotification</option>
            <option value='[2, "42", "Heartbeat",{}]'>Heartbeat</option>
            <option value='[2, "42", "DataTransfer",{"vendorId":"MagnumCap","messageId":"StateOfCharge","data":"{\"meterValue\":42, \"transacionId\":23424}"}]'>DataTransfer</option>
            <option value='[2, "42", "StatusNotification",{"connectorId":1,"errorCode":"0","status":"Charging"}]'>StatusNotification</option>
            <option value='[2, "42", "Authorize", {"idTag":"01020304"}]'>Authorize</option>
            <option value='[2, "42", "StartTransaction", {"connectorId":1, "transactionId":6, "idTag":"01020304", "meterStart": 2000, "timestamp":"#{Utils.datetime_as_string}"}]'>StartTransaction</option>
            <option value='[2, "42", "StopTransaction", {"idTag":"01020304", "transactionId":6, "meterStop": 2140, "timestamp":"#{Utils.datetime_as_string}"}]'>StopTransaction</option>
          </select>
        </div>
        <div>
            <input size=120 type="text" id="messageinput"/>
        </div>
        <div>
            <button type="button" onclick="openSocket();" >Open</button>
            <button type="button" onclick="send();" >Send</button>
            <button type="button" onclick="closeSocket();" >Close</button>
        </div>
        <div id="messages"></div>
       
        <!-- Script to utilise the WebSocket -->
        <script type="text/javascript">
                       
            var webSocket;
            var messages = document.getElementById("messages");
           
           
            function openSocket(){
                // Ensures only one connection is open at a time
                if(webSocket !== undefined && webSocket.readyState !== WebSocket.CLOSED){
                   write("WebSocket is already opened.");
                    return;
                }
                serial = document.getElementById("serial").value;
                host = document.getElementById("hostSelect").value;

                // Create a new instance of the websocket

                if (host == 'local_ex') {
                  webSocket = new WebSocket("ws://"+serial+":abcdef1234abcdef1234abcdef1234abcdef1234@localhost:8383/ocppws/"+serial, ["ocpp1.6"]);
                }
                if (host == 'local_cn') {
                  webSocket = new WebSocket("ws://127.0.0.1:8017/ocppws/"+serial, ["ocpp1.6"]);
                }

                /**
                 * Binds functions to the listeners for the websocket.
                 */
                webSocket.onopen = function(event){
                    write("Connection opened");
                    // For reasons I can't determine, onopen gets called twic"e
                    // and the first time event.data is undefined.
                    // Leave a comment if you know the answer.
                    if(event.data === undefined)
                        return;
                    write(event.data);
                };
 
                webSocket.onmessage = function(event){
                    writeResponse(event.data);
                };
 
                webSocket.onclose = function(event){
                    write("Connection closed");
                };
            }
           
            /**
             * Sends the value of the text input to the server
             */
            function send(){
                var text = document.getElementById("messageinput").value;
                if (text == '') return;
                writeRequest(text);
                webSocket.send(text);
            }
           
            function closeSocket(){
                webSocket.close();
            }
 
            function write(text) {
                messages.innerHTML += "<br/>" + text;
            }

            function writeRequest(text){
                messages.innerHTML += "<br/>--&gt;:" + text;
            }

            function writeResponse(text){
                messages.innerHTML += "<br/>&lt;--:" + text;
            }
           
            function selectMessage() {
              document.getElementById("messageinput").value = document.getElementById("messageSelect").value;
            }
        </script>
       
    </body>
</html>